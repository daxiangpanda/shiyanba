__author__ = '31351'
#coding=utf-8

def isprime(num):
    count = num / 2
    while count >1:
        if num % count == 0:
            return False
            break
        else:
            count -= 1
    else:
        return True

def getfactor(num):
    l = []
    if isprime(num):
        return [num]
    count = num / 2
    for n in range(2, count + 1):
        if num % n == 0 and isprime(n):
            l.append(n)
    return l

def suyinzi(num):
    fac = getfactor(num)
    mul = 1
    for n in fac:
        mul *= n
    if mul == num:
        return fac
    else:
        return fac + suyinzi(num / mul)

# print suyinzi
num = 136463296143190893248608270448493439350683115492680876168052084053504347848230208722375209906076869052896867483336405778205506777456239889195254751404720423599579856449118314029926341504368322006603240157122006887052352260584975471045726061549619820648607756554188235927302932154082823424745427535138517580059079182622982686168676727690710935334448342460007367100561867135456783067679052102951400317012276135721843672557488711786097028300122487504246207343408690682175135816894247936690735246673985277504237071409859401185555290479154689954442396078547166388871978321863215123445269948324347122830270551854130365741961149443091305418900821360286967705810624380568422193310901491451664233271486835428015602712828527839237760712498204208114606471362410690870710499020885304151928570632315330437235330924071236528549152143092328833484016372976817809299430339752106123272706667690980774118545338761390919046832338928913059106351087015273177895380149217373395580948428521961929052291618261409715145038026920685297885235683434107218249548518659574493203836870070093674704878498465104238178877833471640168999551981025958271865584457582649595664499635489167898398826429084686279399959537724187268210760718340639939389766681703213695409551029265784749153180083564347733676434492122290166926822855552175712346350104533901079605669192289178418165584907326210349152609265563881542151049862642882025360604692084264752182798892702414638180781403398216616666472863758371330058299406233359567750413748257953598843651612399709945608339073191578573877985362619301768016485017815171486743934037935902150228210340093187387036580763941637989511155597643722984057627086517479392172108031663245553269
print isprime(num)